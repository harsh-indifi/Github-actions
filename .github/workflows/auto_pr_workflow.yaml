name: Auto PRs from Staging

on:
  pull_request:
    branches: [ main ]
    types:
      - closed

jobs:
  auto-prs:
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.GitHubActionsToken }}

    steps:
      - name: Check out code
        uses: actions/checkout@main

      - name: Create PR to Demo
        if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main' && github.event.pull_request.head.ref == 'staging_cep'
        run: |
          title=$(gh pr view ${{ github.event.pull_request.number }} --json title -q .title)
          PR_URL=$(gh pr create --base demo --head staging_cep --title "Merge changes from staging_cep to demo: $title" --body "Auto PR from GitHub Actions")
          echo "$(gh pr view $PR_URL --json mergeable)"
          MERGEABLE=$(gh pr view $PR_URL --json mergeable -q .mergeable)
          echo "$MERGEABLE"
          if [ "$MERGEABLE" == "CONFLICTING" ]; then
            echo "::error::PR has conflicts."
            exit 1
          else
            echo "PR mergeable."
            gh pr merge $PR_URL --merge
          fi

      - name: Create PR to Dad_Staging
        if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main' && github.event.pull_request.head.ref == 'staging_cep'
        run: |
          title=$(gh pr view ${{ github.event.pull_request.number }} --json title -q .title)
          PR_URL=$(gh pr create --base preprod --head staging_cep --title "Merge changes from staging_cep to preprod: $title" --body "Auto PR from GitHub Actions")
          echo "$(gh pr view $PR_URL --json mergeable)"
          MERGEABLE=$(gh pr view $PR_URL --json mergeable -q .mergeable)
          echo "$MERGEABLE"
          if [ "$MERGEABLE" == "CONFLICTING" ]; then
            echo "::error::PR has conflicts."
            exit 1
          else
            echo "PR mergeable."
            gh pr merge $PR_URL --merge
          fi
