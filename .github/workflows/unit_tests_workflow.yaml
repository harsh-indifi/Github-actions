name: Unit Tests Workflow

on:
  # Triggers the workflow on pull request events only for the main branch
  pull_request:
    branches: [ main ]

permissions:
  pull-requests: write

jobs:
  run-tests:
    strategy:
      fail-fast: false # All tests should run even if some fails
      matrix:
        os: [ubuntu-latest]
        python-version:
          - "3.11"
    name: Unit Tests
    runs-on: ${{ matrix.os }}
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: testdbuser
          POSTGRES_PASSWORD: 12345
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:latest
        ports:
          - 6379:6379
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Set up Python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: ${{ matrix.python-version }}
#          cache: 'pip' # caching pip dependencies

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install -r requirements.txt

      - name: Create databases
        run: |
          PGPASSWORD=12345 psql -U testdbuser -h localhost -c "CREATE DATABASE mytestdb;"
          PGPASSWORD=12345 psql -U testdbuser -h localhost -c "CREATE DATABASE banktestdb;"

      - name: Run tests
        run: |
          FLASK_ENV=test coverage run -m unittest test.test_suite
          coverage xml -o coverage.xml

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '50 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          GITHUB_TOKEN: ${{ secrets.GitHubToken2 }}
          recreate: true
          path: code-coverage-results.md
